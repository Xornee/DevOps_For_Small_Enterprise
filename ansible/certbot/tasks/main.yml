- name: install packages
  ansible.builtin.apt:
    update_cache: yes
    name:
      - certbot
    state: present

- name: create directory for certbot scripts
  ansible.builtin.file:
    path: /root/certbot
    state: directory
    owner: root
    group: root
    mode: '700'

- name: copy certbot script
  ansible.builtin.copy:
    src: certbot/get-certs.sh
    dest: /root/certbot/get-certs.sh
    owner: root
    group: root
    mode: '700'

- name: copy manual authenticator script
  ansible.builtin.copy:
    src: files/authenticator.sh
    dest: /root/certbot/authenticator.sh
    owner: root
    group: root
    mode: '700'

- name: copy manual cleanup script
  ansible.builtin.copy:
    src: files/cleanup.sh
    dest: /root/certbot/cleanup.sh
    owner: root
    group: root
    mode: '700'

- name: copy certbot service file
  ansible.builtin.copy:
    src: files/certbot.service
    dest: /etc/systemd/system/certbot.service
    owner: root
    group: root
    mode: '644'

- name: copy certbot timer file
  ansible.builtin.copy:
    src: files/certbot.timer
    dest: /etc/systemd/system/certbot.timer
    owner: root
    group: root
    mode: '644'

- name: ensure certbot.timer is started and enabled at boot
  ansible.builtin.systemd:
    name: certbot.timer
    state: started
    enabled: yes

- name: set execute permission on get-certs.sh
  ansible.builtin.file:
    path: /root/certbot/get-certs.sh
    state: file
    mode: '0755'

- name: set execute permission on authenticator.sh
  ansible.builtin.file:
    path: /root/certbot/authenticator.sh
    state: file
    mode: '0755'

- name: set execute permission on cleanup.sh
  ansible.builtin.file:
    path: /root/certbot/cleanup.sh
    state: file
    mode: '0755'

- name: run get-certs
  command: "/root/certbot/get-certs.sh"

